#Définition des stages
stages:
  - build #Test de la compilation
  - unit-tests #Execution des tests
  - integration-tests #Execution des tests d'intégration
  - publish
  - deploy #Depoiement sur le serveur de production

build:
  stage: build
  image: tmaier/docker-compose:latest #Image utilisée pour exécuter le docker compose
  services:
    - docker:dind #Pour faire fonctionner Docker dans Docker
  script:
      - docker-compose build # Execution du build
  only: #Exécuté au push sur main et develop
      - develop 
      - main
  
unit-tests:
  stage: unit-tests
  image: tmaier/docker-compose:latest
  services:
    - docker:dind
  script:
    - docker-compose -f docker-compose-test.yaml up --build # Execution des tests
  needs:
    - job: build
  only: #Exécuté au push sur main et develop
    - develop
    - main

integration-tests:
  stage: integration-tests
  image: tmaier/docker-compose:latest
  services:
    - docker:dind
  script:
    - docker-compose -f docker-compose-test-integration.yaml up --build # Execution des tests
  needs:
    - job: build
  only: #Exécuté au push sur main et develop
    - develop
    - main

publish:
  stage: publish
  image: docker:latest
  only:
    - main
  services:
    - docker:dind
  script:
    - echo "Build application..."
    - cd printplan-api #Accès au dossier du projet
    - docker build --tag $REGISTRY_USER/printplan:latest --file Dockerfile . #Build de l'image de l'api
    - echo "Login to registry..."
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD #Login au Registry docker hub
    - echo "Pushing to registry..."
    - docker push $REGISTRY_USER/printplan:latest #Push sur le registry
    - echo "Application successfully pushed."
  needs:
    - job: unit-tests
    - job: integration-tests

production:
  image: alpine:latest # Image légère de Linux
  stage: deploy
  before_script:
  - apk add --update sshpass openssh # Installation des dépendances
  script:
    - sshpass -p $SSH_PASS ssh $SSH_USER@$VM_IPADDRESS -p 68 -o "StrictHostKeyChecking=no" "hostname" #Pour permettre la connexion en SSH au serveur de prod
    - sshpass -p $SSH_PASS ssh $SSH_USER@$VM_IPADDRESS -p 68 "~/deploy.sh" # Script permettant le déploiement
    - sshpass -p $SSH_PASS ssh $SSH_USER@$VM_IPADDRESS -p 68 "cd ~/fil_rouge && docker compose -f docker-compose.yaml up --build -d" # Lancement du docker
  only:
    - main # Exécuté uniquement au push ou merge sur main
  needs:
    - job: unit-tests
    - job: integration-tests
